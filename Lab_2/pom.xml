<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  
  <modelVersion>4.0.0</modelVersion>
  <groupId>edu.nikita.labs</groupId>
  <artifactId>labs</artifactId>
  <packaging>pom</packaging>
  <version>1.3.1</version>
  <name>labs master POM</name>
  <url>http://maven.apache.org</url>

  <modules>
    <module>lab2</module>        
  </modules>
  
 <!-- Shared version number properties -->
  <properties>
      <org.springframework.version>3.0.5.RELEASE</org.springframework.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
         <version>1.7.7</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>3.8.1</version>
        <scope>test</scope>
      </dependency>
      
      <!--
          Core utilities used by other modules.
          Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>
      
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
          <version>${org.springframework.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>1.2</version>
      </dependency>

      <!--
          Expression Language (depends on spring-core)
          Define this if you use Spring Expression APIs (org.springframework.expression.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-expression</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!-- 
          Bean Factory and JavaBeans utilities (depends on spring-core)
          Define this if you use Spring Bean APIs (org.springframework.beans.*) 
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
          Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans)
          Define this if you use Spring AOP APIs (org.springframework.aop.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
          Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans) 
          This is the central artifact for Spring's Dependency Injection Container and is generally always defined
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
          Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
          Define this if you need any of these integrations
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
          Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
          Define this if you use Spring Transactions or DAO Exception Hierarchy
          (org.springframework.transaction.*/org.springframework.dao.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
          JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx)
          Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
          Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
          (depends on spring-core, spring-beans, spring-context, spring-tx)
          Define this if you need ORM (org.springframework.orm.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
          Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans.
          (depends on spring-core, spring-beans, spring-context)
          Define this if you need OXM (org.springframework.oxm.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-oxm</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
          Web application development utilities applicable to both Servlet and Portlet Environments
          (depends on spring-core, spring-beans, spring-context)
          Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
          Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
          Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
          Spring MVC for Portlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
          Define this if you use Spring MVC with a Portlet Container (org.springframework.web.portlet.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc-portlet</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
          Support for testing Spring applications with tools such as JUnit and TestNG
          This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${org.springframework.version}</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <scm>
	   <connection>scm:git:git@github.com:nvoronin/MatLabs.git</connection>
	   <url>scm:git:git@github.com:nvoronin/MatLabs.git</url>
	   <developerConnection>scm:git:git@github.com:nvoronin/MatLabs.git</developerConnection>
  </scm>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.5.1</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <source>1.6</source>
          <target>1.6</target>
          <optimize>true</optimize>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
        <artifactId>maven-java-formatter-plugin</artifactId>
        <version>0.3.1</version>
        <configuration>
          <configFile>${project.basedir}/formatting.xml</configFile>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>full</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>2.2.1</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>2.9.1</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
